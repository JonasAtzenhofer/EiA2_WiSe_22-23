namespace A09_2 {
    export class FlyingCrows {
        position: Vector;
        velocity: Vector;
        scale: Vector;

        constructor(_position: Vector) {
            this.position = _position;
            this.velocity = new Vector(0, 0);
            this.velocity.random(50, 200);

            this.scale = new Vector(0, 0);
            this.scale.set(this.position.y / 225, this.position.y / 225);
        }

        draw(): void {
            crc2.save();
            crc2.translate(this.position.x, this.position.y);
    
            let path11: Path2D = new Path2D("m332 260c-1.17-0.216-10.3-3.2-13.2-4.33-2.43-0.932-12.6-5.21-12.9-5.44-0.361-0.246-1.19-0.534-1.19-0.413 0 0.0541 1.16 0.815 2.58 1.69 3.68 2.27 6.26 4.1 6.21 4.41-0.022 0.146-0.277 0.302-0.568 0.348-0.618 0.0972-11.6-5.4-17.1-8.59-2.12-1.22-3.9-2.21-3.96-2.21-0.189 0-6.93-3.95-9.1-5.33-1.11-0.705-2.15-1.28-2.31-1.28-0.359 0-8.68-4.6-15-8.32-3.9-2.28-4.64-2.81-5.16-3.74-0.334-0.594-1.37-2.35-2.3-3.9l-1.69-2.82-1.22 0.646c-1.72 0.916-5.55 1.93-8.49 2.26-4.42 0.487-5.31 0.708-11.6 2.89l-6.22 2.14-3.84-0.163c-2.23-0.0949-4.76-0.374-6.04-0.667-1.21-0.277-2.54-0.504-2.95-0.504-0.991 0-2.56 0.698-5.22 2.32-2.46 1.5-4.95 2.55-6.64 2.81l-1.15 0.175 1.01-1.88c0.694-1.29 1.68-2.53 3.13-3.93 3.67-3.54 4.77-4.84 5.13-6.08 0.568-1.96 2.37-4.89 3.73-6.06 1.44-1.24 4.65-2.62 6.97-3 3.14-0.508 6.87-2.89 9.01-5.76 1.62-2.17 1.62-2 0.168-5.22l-0.847-1.88-2.3-1.07c-1.26-0.589-2.59-1.15-2.96-1.25-0.364-0.0995-2.16-0.766-3.99-1.48l-3.33-1.3-3.94-4.93c-2.17-2.71-4.36-5.5-4.87-6.2s-2.36-3.03-4.1-5.19c-3.16-3.9-7.01-9.31-7.01-9.85 0-0.664 1.01-0.189 2.35 1.1l1.44 1.39-1.11-2.05c-1.06-1.96-2.94-7.07-2.94-7.97 0-0.931 1.07-0.359 2.8 1.49 0.984 1.06 1.7 1.68 1.59 1.39-0.441-1.19-1.48-5.88-1.48-6.68-2.25e-4 -0.565 0.128-0.86 0.374-0.86 0.412 0 2.27 2.21 3.16 3.77 0.312 0.545 0.633 0.991 0.713 0.992 0.0803 1e-3 0.0567-0.802-0.0526-1.78-0.378-3.4-0.218-4.48 0.615-4.16 0.383 0.147 2.8 4.56 3.26 5.95 0.158 0.48 0.271-0.103 0.408-2.12 0.104-1.53 0.205-2.88 0.222-2.99 0.0178-0.119 0.297-0.179 0.619-0.132 0.454 0.0654 0.778 0.541 1.43 2.09 0.462 1.11 0.992 2.69 1.18 3.51 0.185 0.828 0.415 1.41 0.511 1.3 0.0957-0.114 0.388-1.16 0.65-2.32 0.55-2.45 0.812-3.04 1.34-3.04 0.208 0 0.487 0.208 0.619 0.463 0.523 1 1.09 4.01 1.15 6.07 0.0341 1.19 0.0994 2.13 0.145 2.09 0.0457-0.0457 0.552-1.05 1.12-2.24s1.14-2.15 1.26-2.15c1.08 0 1.81 1.79 1.98 4.88l0.0725 1.31 0.742-1.13c1.32-2.01 2.36-0.948 2.24 2.28-0.0399 1.06-0.013 1.91 0.0597 1.91 0.0728-7e-3 0.593-0.609 1.16-1.34 0.832-1.08 1.15-1.31 1.72-1.25 0.654 0.0757 0.702 0.177 0.777 1.63 0.0475 0.919-0.0874 2.05-0.331 2.76-0.226 0.663-0.411 1.26-0.411 1.32 0 0.0625 0.721-0.554 1.6-1.37 1.68-1.56 1.85-1.64 2.61-1.23 0.417 0.223 0.445 0.437 0.234 1.79-0.132 0.843-0.591 2.16-1.02 2.92-0.97 1.72-0.981 1.95-0.053 1.07 0.926-0.874 3.78-2.59 4.3-2.58 0.995 8e-3 1.14 0.397 0.682 1.79-0.242 0.728-0.673 1.53-0.958 1.79-0.778 0.704-0.623 1.03 0.209 0.435 1.19-0.846 4.03-1.94 4.58-1.76 0.677 0.215 0.642 0.65-0.144 1.81-0.359 0.53-0.568 0.963-0.463 0.963 0.105-7e-5 0.817-0.238 1.58-0.529 1.46-0.556 2.84-0.689 3.09-0.297 0.079 0.128-0.316 0.754-0.877 1.39l-1.02 1.16 2.15-0.715c2.12-0.705 3.61-0.917 3.96-0.564 0.0996 0.0996-0.202 0.576-0.669 1.06-0.986 1.02-1.02 1.01 1.42 0.452 1.41-0.321 2.02-0.355 2.5-0.138 0.347 0.158 0.63 0.394 0.63 0.526s-0.493 0.746-1.09 1.37c-0.947 0.975-1.01 1.11-0.463 0.97 1.55-0.388 4.92-0.507 5.5-0.193l0.6 0.321-0.62 0.665c-0.341 0.366-1.39 1.08-2.34 1.58-0.946 0.502-1.42 0.842-1.06 0.757 0.364-0.0855 1.89-0.283 3.4-0.439 2.09-0.217 2.9-0.208 3.44 0.0369l0.7 0.321-0.903 0.757c-0.894 0.749-4.68 2.44-7.37 3.29-1.43 0.453-1.75 0.949-0.926 1.44 0.435 0.261 0.431 0.302-0.0624 0.683-0.289 0.223-1.24 0.633-2.12 0.91-2.34 0.742-4.35 1.48-4.55 1.68-0.0966 0.0966 0.469 0.174 1.26 0.173 1.14-2e-3 2.05-0.275 4.48-1.34 1.67-0.736 3.76-1.62 4.63-1.95 0.873-0.339 2.42-0.967 3.44-1.4s4.89-1.89 8.61-3.24l6.76-2.46 3.7-3.6c2.03-1.98 4.59-4.61 5.68-5.85 5.18-5.88 6.28-6.8 7.39-6.1 0.256 0.162 0.63 0.0989 1.12-0.188 0.682-0.403 0.849-0.397 2.52 0.0832 1.18 0.34 1.88 0.696 2.06 1.05 0.15 0.294 0.47 0.496 0.713 0.448 0.48-0.095 3.51 1.34 3.8 1.8 0.0959 0.155 0.0392 0.445-0.126 0.644-0.247 0.298-0.123 0.34 0.705 0.237 0.809-0.101 1.15 7e-3 1.77 0.553 0.423 0.373 0.869 0.678 0.992 0.678 0.123 0 0.223 0.165 0.223 0.366s0.243 0.43 0.54 0.507c0.443 0.116 0.507 0.276 0.36 0.891-0.0986 0.412-0.297 0.898-0.44 1.08-0.193 0.246-0.0925 0.331 0.392 0.331 0.359 0 0.872 0.242 1.14 0.537 0.692 0.764 0.383 0.979-3.98 2.77-2.04 0.839-4.33 1.81-5.11 2.16-0.771 0.35-2.44 1.03-3.7 1.52-1.27 0.486-3.14 1.29-4.16 1.8s-3.08 1.43-4.57 2.06c-1.94 0.817-2.7 1.26-2.66 1.56 0.0328 0.229-0.0327 0.691-0.145 1.03-0.139 0.411-0.0607 0.828 0.24 1.29 0.422 0.644 0.418 0.717-0.0732 1.38-0.285 0.386-0.603 0.966-0.705 1.29-0.136 0.429-0.578 0.701-1.63 1.01-1.22 0.354-1.65 0.662-2.73 1.96-2.01 2.41-2.76 3.45-2.61 3.6 0.0774 0.0774 0.779-0.037 1.56-0.254 3.31-0.923 6.58-0.778 6.58 0.291-0.0016 0.403-1.96 2.24-3.17 2.98-0.781 0.477-0.027 0.55 1.52 0.149 0.947-0.245 2.71-0.412 4.37-0.412 2.39 0 2.86 0.073 3.4 0.53l0.625 0.53-0.794 0.657c-0.437 0.361-1.45 1.02-2.25 1.47l-1.46 0.814 1.37-0.156c1.93-0.22 7.22 0.318 7.97 0.811 0.897 0.588 0.616 0.945-1.29 1.64-2.89 1.05-2.89 1.06-0.93 1.07 2.82 0.016 5.14 0.33 5.48 0.741 0.17 0.205 0.244 0.439 0.163 0.52-0.241 0.241-6.36 1.95-6.99 1.96-0.319 7.9e-4 -0.635 0.091-0.703 0.201-0.0677 0.11 0.729 0.13 1.77 0.0453 1.04-0.0847 3.19-0.0556 4.78 0.0645 4.63 0.351 4.61 1.03-0.038 1.95-1.35 0.268-2.45 0.553-2.45 0.634 7.94e-4 0.0814 1.04 0.157 2.32 0.167 2.8 0.023 5.63 0.321 6.16 0.646 0.754 0.466-0.159 0.771-4.64 1.55l-4.5 0.78 3.9 0.058c2.15 0.0319 3.99 0.0792 4.1 0.105 0.109 0.0259 1.03 0.142 2.05 0.259 1.97 0.225 2.98 0.595 2.61 0.957-0.125 0.122-1.77 0.414-3.67 0.65-1.89 0.235-3.74 0.472-4.1 0.526-0.364 0.0537-1.02 0.118-1.46 0.142-1.91 0.107 0.634 0.444 3.7 0.491 4.59 0.0707 12 1.08 12 1.63 0 0.395-0.823 0.492-5.75 0.679-2.66 0.101-4.83 0.271-4.83 0.378s1.16 0.213 2.58 0.237c2.56 0.0421 10.7 1.09 12.6 1.62 1.25 0.351 1.28 0.773 0.0661 0.816-0.509 0.0182-1.05 0.0628-1.19 0.0992s-1.9 0.0954-3.9 0.131c-3.94 0.0705-4.06 6e-3 1.52 0.813 3.21 0.463 8.17 1.53 8.8 1.89 0.502 0.287 6e-3 0.356-3.38 0.469l-3.97 0.132 3.04 0.439c3.75 0.54 11.5 2.26 12.5 2.78 1.54 0.793 0.542 0.945-5.07 0.769-3-0.0941-5.93-0.231-6.52-0.303-0.706-0.0881-0.926-0.0513-0.661 0.111 0.218 0.134 0.992 0.324 1.72 0.424 4.92 0.674 19.2 3.86 21.6 4.84 0.545 0.216 0.925 0.499 0.844 0.629-0.189 0.306-2.99 0.291-6.33-0.0352-1.46-0.142-3.96-0.379-5.56-0.528-1.6-0.148-3.51-0.343-4.23-0.432-0.728-0.0895-1.26-0.0984-1.19-0.0198 0.0728 0.0786 2.28 0.699 4.89 1.38 2.62 0.68 5.89 1.6 7.28 2.05 6.96 2.24 8.84 2.9 9.34 3.25 0.493 0.345 0.501 0.395 0.0866 0.554-0.689 0.264-3.49-0.0768-11.1-1.35-6.56-1.1-8.38-1.3-6.09-0.679 4.73 1.29 17.5 6.01 18.9 6.99 1.36 0.955-0.679 0.928-5.44-0.0732-6.37-1.34-10-2.14-11.6-2.55-0.853-0.22-1.6-0.353-1.66-0.295-0.0576 0.0576 0.759 0.441 1.82 0.853 3.84 1.5 12.9 5.85 13.5 6.51 0.449 0.471 0.443 0.497-0.151 0.646-0.34 0.0854-1.41-0.0278-2.37-0.252-2.56-0.594-16.1-4.49-18.8-5.43-1.31-0.445-2.44-0.807-2.51-0.805-0.0739 2e-3 1.23 0.726 2.91 1.61 4.35 2.3 9.28 5.28 9.45 5.72 0.231 0.602-0.239 0.8-1.39 0.587zm-55.7-64.9c0-0.146-0.115-0.086-0.256 0.132-0.141 0.218-0.256 0.516-0.256 0.661s0.115 0.086 0.256-0.132c0.141-0.218 0.256-0.516 0.256-0.661zm4.57-2.61c-0.0732-0.128-0.295 0.154-0.494 0.626-0.499 1.19-0.448 1.34 0.134 0.4 0.271-0.437 0.432-0.898 0.359-1.03zm-1.53 0.118c0.0837-0.135 0.0437-0.313-0.089-0.395-0.133-0.082-0.309 0.0289-0.393 0.246-0.164 0.429 0.233 0.552 0.482 0.149zm1.1-2.59c-0.218-0.218-0.96 0.131-0.96 0.452 0 0.196 0.169 0.192 0.552-0.0131 0.304-0.162 0.487-0.36 0.408-0.439z");
            crc2.fillStyle = "rgb(0, 0, 0)";
            crc2.scale(0.4, 0.4);
    
            crc2.fill(path11);
    
            crc2.stroke(path11);
            crc2.closePath();
            crc2.restore();
        }

        

        fly(_timeslice: number): void {
            let offset: Vector = new Vector(this.velocity.x, this.velocity.y);
            offset.scale(_timeslice);
            this.position.add(offset);

            if (this.position.x > crc2.canvas.width)
                this.position.x -= crc2.canvas.width;

            if (this.position.x < 0)
                this.position.x += crc2.canvas.width;
        }
    }
    }