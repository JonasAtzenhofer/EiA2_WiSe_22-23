//Jonas Atzenhofer L08.2
//Matrikelnummer: 271026
//Quellen: https://www.w3schools.com/graphics/canvas_gradients.asp
//  https://www.youtube.com/watch?v=n7kFRru_d2A
// LO8 Videos
// Vogelhaus inspiriert von Arthur Aguiar
var A08;
(function (A08) {
    window.addEventListener("load", handleLoad);
    function handleLoad(_event) {
        let canvas = document.querySelector("canvas");
        let crc2 = canvas.getContext("2d");
        drawBackground();
        drawSun({ x: 100, y: 75 });
        drawCloud({ x: 300, y: 95 }, { x: 150, y: 75 });
        drawMountains({ x: 0, y: 300 }, 75, 200, "grey", "white");
        drawMountains({ x: 0, y: 300 }, 50, 150, "grey", "lightgrey");
        drawTree({ x: 10, y: 500 }, { x: 50, y: 100 });
        drawTree({ x: 75, y: 500 }, { x: 50, y: 100 });
        drawTree({ x: 125, y: 500 }, { x: 50, y: 100 });
        drawTree({ x: 155, y: 500 }, { x: 50, y: 100 });
        drawTree({ x: 200, y: 500 }, { x: 50, y: 100 });
        drawTree({ x: 255, y: 500 }, { x: 50, y: 100 });
        drawTree({ x: 300, y: 500 }, { x: 50, y: 100 });
        drawSnowflakes({ x: 0, y: 0 }, { x: 0, y: 0 });
        drawSnowman({ x: 100, y: 600 }, { x: 50, y: 100 });
        drawHouse({ x: 250, y: 600 }, { x: 50, y: 100 });
        drawBird({ x: 375, y: 585 }, { x: 200, y: 100 });
        drawFlyingBird({ x: 375, y: 585 });
        function drawBackground() {
            console.log("Background");
            let gradient = crc2.createLinearGradient(0, 0, 0, crc2.canvas.height);
            gradient.addColorStop(0, "lightblue");
            gradient.addColorStop(0.5, "white");
            gradient.addColorStop(1, "HSL(100, 80%, 30%)");
            crc2.fillStyle = gradient;
            crc2.fillRect(0, 0, crc2.canvas.width, crc2.canvas.height);
        }
        function drawSun(_position) {
            console.log("Sun", _position);
            let r1 = 30;
            let r2 = 100;
            let gradient = crc2.createRadialGradient(0, 0, r1, 0, 0, r2);
            gradient.addColorStop(0, "HSLA(60, 100%, 90%, 1)");
            gradient.addColorStop(1, "HSLA(60, 100%, 50%, 0)");
            crc2.save();
            crc2.translate(_position.x, _position.y);
            crc2.fillStyle = gradient;
            crc2.arc(0, 0, r2, 0, 2 * Math.PI);
            crc2.fill();
            crc2.restore();
        }
        function drawCloud(_position, _size) {
            console.log("Cloud", _position, _size);
            let nParticles = 20;
            let radiusParticle = 50;
            let particle = new Path2D();
            let gradient = crc2.createRadialGradient(0, 0, 0, 0, 0, radiusParticle);
            particle.arc(0, 0, radiusParticle, 0, 2 * Math.PI);
            gradient.addColorStop(0, "HSLA(0, 100%, 100%, 0.5)");
            gradient.addColorStop(1, "HSLA(0, 100%, 100%, 0)");
            crc2.save();
            crc2.translate(_position.x, _position.y);
            crc2.fillStyle = gradient;
            for (let drawn = 0; drawn < nParticles; drawn++) {
                crc2.save();
                let x = (Math.random() - 0.5) * _size.x;
                let y = -(Math.random() * _size.y);
                crc2.translate(x, y);
                crc2.fill(particle);
                crc2.restore();
            }
            crc2.restore();
        }
        function drawMountains(_position, _min, _max, _colorLow, _colorHigh) {
            console.log("Mountains");
            let stepMin = 50;
            let stepMax = 150;
            let x = 0;
            crc2.save();
            crc2.translate(_position.x, _position.y);
            crc2.beginPath();
            crc2.moveTo(0, 0);
            crc2.lineTo(0, -_max);
            do {
                x += stepMin + Math.random() * (stepMax - stepMin);
                let y = -_min - Math.random() * (_max - _min);
                crc2.lineTo(x, y);
            } while (x < crc2.canvas.width);
            crc2.lineTo(x, 0);
            crc2.closePath();
            let gradient = crc2.createLinearGradient(0, 0, 0, -_max);
            gradient.addColorStop(0, _colorLow);
            gradient.addColorStop(0.7, _colorHigh);
            crc2.fillStyle = gradient;
            crc2.fill();
            crc2.restore();
        }
        function drawTree(_position, _size) {
            console.log("Tree", _position, _size);
            crc2.fillStyle = "brown";
            crc2.fillRect(_position.x, _position.y, 20, -100);
            let nBranches = 10;
            let maxRadius = 60;
            let branch = new Path2D();
            branch.arc(0, 0, maxRadius, 0, 2 * Math.PI);
            crc2.fillStyle = "green";
            crc2.fillRect(_position.x, _position.y, 20, -_size.y);
            crc2.save();
            crc2.translate(_position.x, _position.y);
            do {
                let y = -_size.y - Math.random() * _size.y;
                let x = Math.random() * _size.x;
                crc2.save();
                crc2.translate(x, y);
                crc2.fill(branch);
                crc2.restore();
                nBranches -= 1;
            } while (nBranches > 0);
            crc2.restore();
            crc2.fillStyle = "brown";
            crc2.fillRect(_position.x, _position.y, 20, -100);
        }
        function drawSnowflakes(_position, _size) {
            console.log("Snowflakes", _position, _size);
            for (let i = 0; i < 100; i++) {
                let x = Math.random() * crc2.canvas.width;
                let y = Math.random() * crc2.canvas.height;
                let radiusSnowflake = Math.random() * 3 + 1;
                crc2.beginPath();
                crc2.arc(x, y, radiusSnowflake, 0, 2 * Math.PI);
                crc2.fillStyle = "white";
                crc2.fill();
            }
        }
        function drawSnowman(_position, _size) {
            console.log("Snowman", _position, _size);
            crc2.save();
            crc2.translate(_position.x, _position.y);
            crc2.fillStyle = "white";
            crc2.beginPath();
            crc2.arc(0, 0, 50, 0, 2 * Math.PI);
            crc2.fill();
            crc2.stroke();
            crc2.beginPath();
            crc2.arc(0, -70, 40, 0, 2 * Math.PI);
            crc2.fill();
            crc2.stroke();
            crc2.beginPath();
            crc2.arc(0, -140, 30, 0, 2 * Math.PI);
            crc2.fill();
            crc2.stroke();
            crc2.fillStyle = "black";
            crc2.beginPath();
            crc2.arc(-10, -150, 5, 0, 2 * Math.PI);
            crc2.fill();
            crc2.beginPath();
            crc2.arc(10, -150, 5, 0, 2 * Math.PI);
            crc2.fill();
            crc2.fillStyle = "orange";
            crc2.beginPath();
            crc2.arc(0, -145, 5, 0, 2 * Math.PI);
            crc2.fill();
            crc2.fillStyle = "black";
            crc2.beginPath();
            crc2.arc(0, -130, 10, 0, 1 * Math.PI);
            crc2.fill();
            crc2.restore();
        }
        function drawHouse(_position, _size) {
            console.log("House", _position, _size);
            crc2.save();
            crc2.beginPath();
            crc2.translate(_position.x, _position.y);
            crc2.rect(0, 0, 20, 100);
            crc2.fillStyle = "#632E1A";
            crc2.fill();
            crc2.restore();
            crc2.closePath();
            crc2.save();
            crc2.beginPath();
            crc2.translate(_position.x - 40, _position.y - 10);
            crc2.rect(0, 0, 50, 10);
            crc2.fillStyle = "#632E1A";
            crc2.fill();
            crc2.restore();
            crc2.closePath();
            crc2.save();
            crc2.beginPath();
            crc2.translate(_position.x + 10, _position.y - 10);
            crc2.rect(0, 0, 60, 10);
            crc2.fillStyle = "#743D2B";
            crc2.fill();
            crc2.restore();
            crc2.closePath();
            crc2.save();
            crc2.beginPath();
            crc2.translate(_position.x - 40, _position.y - 80);
            crc2.rect(0, 0, 40, 70);
            crc2.fillStyle = "#743D2B";
            crc2.fill();
            crc2.restore();
            crc2.closePath();
            crc2.save();
            crc2.beginPath();
            crc2.translate(_position.x, _position.y - 80);
            crc2.rect(0, 0, 60, 70);
            crc2.fillStyle = "#B06C49";
            crc2.fill();
            crc2.restore();
            crc2.closePath();
            crc2.save();
            crc2.beginPath();
            crc2.translate(_position.x - 20, _position.y - 80);
            crc2.lineTo(0, -40);
            crc2.lineTo(30, 0);
            crc2.lineTo(-30, 0);
            crc2.lineTo(0, -40);
            crc2.fillStyle = "#632E1A";
            crc2.fill();
            crc2.restore();
            crc2.closePath();
            crc2.save();
            crc2.beginPath();
            crc2.translate(_position.x + 9, _position.y - 80);
            crc2.lineTo(0, 0);
            crc2.lineTo(60, 0);
            crc2.lineTo(30, -40);
            crc2.lineTo(-30, -40);
            crc2.lineTo(0, 0);
            crc2.fillStyle = "#743D2B";
            crc2.fill();
            crc2.restore();
            crc2.closePath();
        }
        function drawBird(_position, _size) {
            console.log("Bird", _position, _size);
            crc2.save();
            crc2.translate(190, 362);
            let path = new Path2D("m129.4 666c-6.03-4.14-14.9-15.5-20-25.5-1.21-2.41-4.41-6.59-7.1-9.28-3.56-3.56-5.31-6.32-6.42-10.2-2.16-7.44-2.52-13.7-0.996-17.3 1.21-2.93 1.13-3.33-1.2-5.5-5.94-5.54-8.68-17.3-6.46-27.6 1.09-5.07 1.04-5.26-2.68-11-6.62-10.1-10.8-21.3-15.2-40.8-2.79-12.2-3.02-16.8-0.876-17.3 0.899-0.179 2.15 0.872 2.96 2.48 4.89 9.75 18.5 24.7 30.5 33.3 17.1 12.3 34.1 18.6 53.7 19.7 22.4 1.3 45.5-5 61.3-16.7 16.5-12.2 23.8-26.9 20.3-40.5l-1.3-5-10-0.638c-11.4-0.726-18.2-2.92-27.1-8.73-7.48-4.86-13.9-11.5-18.6-19.3-2.24-3.69-5.99-7.96-9.25-10.5-9.42-7.39-15.4-17.7-13.9-23.8 0.573-2.28-0.228-3.46-6.32-9.29-12.4-11.8-19.4-22.4-23.7-35.6-1.55-4.75-3.84-9.26-5.96-11.7-5.46-6.38-10.1-16.3-14.5-30.9-4.64-15.3-5.95-26.4-4.15-35.1 0.828-3.98 0.88-7.47 0.179-12-2.16-14-3.31-48.9-2.2-66.9 1.17-18.9 4.12-35.8 6.58-37.6 1.19-0.87 1.53-3.27 1.53-10.8 0-15.6 2-38.9 3.48-40.6 0.724-0.825 1.86-5.78 2.53-11 0.667-5.22 2.05-12.8 3.08-16.8 2.39-9.39 9.35-25.6 13-30.3 1.57-2.03 4.26-7.58 5.98-12.3 2.97-8.21 5-10.8 6.84-8.87 0.454 0.486 1.37 8.53 2.03 17.9 3.94 55.6 18.4 104 40.9 138 11.5 17.1 19.9 26 45.7 48.4 14.4 12.5 24.4 21.4 32.4 29.1 4.13 3.95 7.61 7.08 7.73 6.96 0.119-0.119-0.259-4.7-0.84-10.2-2.91-27.4 3.31-61.1 16.4-89 6.4-13.6 19.3-34.2 27.3-43.5 12.3-14.3 34-34.9 45-42.6 16.5-11.5 26-17.4 27.9-17.4 2.49 0 2.8 1.89 0.77 4.76-1.07 1.51-4.23 7.32-7.03 12.9-30.4 60.7-21.9 135 21.7 188 4.36 5.36 11 12.7 14.8 16.2l6.87 6.5 8.5-2.93c7.84-2.7 9.62-2.93 23-2.97 14.3-0.0387 14.6 0.0157 24.4 3.63 13.3 4.93 25.6 12.6 45 28 7.22 5.73 30.7 24.7 32.5 26.4 0.216 0.189-0.134 0.978-0.778 1.75-0.662 0.798-4.09 1.71-7.89 2.1-9.48 0.973-20 3.44-24.7 5.78-4.25 2.12-18.5 12.6-18.5 13.6-9e-3 0.336-1.41 2.19-3.12 4.11-5.02 5.67-11.7 15.5-13.5 19.6-0.889 2.13-3.57 6.89-5.95 10.6-8.08 12.5-11.1 20.5-17.5 46.4-6.37 25.9-14.2 42.4-27.2 57-9.4 10.6-22.8 20.8-35.6 27.3-5.61 2.83-6.26 3.46-5.6 5.39 0.412 1.2 0.942 5.16 1.18 8.79 0.474 7.34-1.51 13.9-4.21 13.9-1.74 0-2.06-0.679-3-6.31-0.724-4.35-6.73-11.7-9.57-11.7-0.996 0-6.01 1.15-11.1 2.56-5.13 1.41-13.6 3.35-18.8 4.3-8.76 1.6-9.52 1.93-9.81 4.19-0.477 3.72-6.27 18.8-7.68 19.9-2.21 1.84-3.72-1.61-4.63-10.6-0.479-4.72-1.16-9.06-1.52-9.63-0.424-0.686-3.81-0.833-9.76-0.424-5.01 0.344-23.5 0.655-41.2 0.689-34.3 0.0675-38 0.471-48.7 5.27-11.9 5.38-20 11.9-44.7 36.4-25.4 25.1-29 28.3-37.7 34-6.52 4.22-12.1 4.53-17.3 0.977zm18.6-6.71c5.77-3.74 13.9-11.2 30.4-27.9 24.5-24.8 32.6-31.7 44-37.8 16.2-8.53 13.9-8.22 60.9-8.51 23-0.142 42.3-0.633 42.7-1.09 0.458-0.458-0.637-2.15-2.43-3.75-4.08-3.64-10.5-4.13-12.2-0.917-1.42 2.66-5.4 2.56-7.96-0.189-3.86-4.15-1.84-9.76 4.65-12.9 3.87-1.88 5.72-2.07 16.1-1.73 8.02 0.264 12.5 0.849 14 1.85 2.96 1.87 5.18 7.09 5.18 12.2v3.99l3.75-0.636c8.3-1.41 22.2-4.94 22.2-5.63 0-0.406-0.675-0.998-1.5-1.31-1.02-0.39-1.5-1.98-1.5-4.92 0-4.05 0.278-4.5 4.14-6.67 6.26-3.52 13.3-3.22 19.2 0.816 2.51 1.73 5.11 3.14 5.76 3.14 2.4 0 16.7-8.45 25.6-15.1 22.6-17 32.5-34.4 42.9-75.9 4.46-17.6 9.27-30.3 15.3-40.4 2.69-4.48 7.08-12 9.76-16.6 3.27-5.69 8.18-11.9 15-19 11-11.5 12.5-14.3 14.4-27.5 1.01-7.15 0.475-16.6-1.11-19.7-1.45-2.83-19.7-15.2-28.8-19.5-12.7-6.03-20.4-7.54-35.7-7.01-24.2 0.842-34.7 6.74-68.3 38.2-6.88 6.45-15.4 14-19 16.7-8.36 6.36-20.6 12.4-29.5 14.4-3.85 0.89-7.12 1.75-7.28 1.9-0.156 0.156 0.824 3.38 2.18 7.17 3.49 9.77 5.3 17.7 6.02 26.5 0.668 8.07 0.164 10.9-1.94 10.9-0.925 0-1.51-2.74-2.01-9.52-0.392-5.23-1.11-9.76-1.59-10.1s-0.88-1.55-0.88-2.78c0-4.6-6.16-21-14-37.3-9.5-19.7-11.7-24.6-15.4-33.4-3.86-9.36-11-20.7-19.1-30.2-8.34-9.79-36.3-36.4-56-53.3-7.69-6.6-17.2-15.2-21.1-19-25.5-25.3-43.6-60-54.5-105-4.1-17-8.31-45.6-9.19-62.8-0.326-6.29-2.14-3.65-5.03 7.34-6.92 26.3-7.32 48.1-1.36 75.4 2.04 9.33 3.92 15.2 8.31 26 7.39 18.2 23.5 40.7 35.7 49.9 5.09 3.84 6.55 6.84 3.58 7.41-2.47 0.475-17.3-14-25.6-25.1-15.8-21-26.9-50.4-29.3-78.2-1.28-14.4-0.588-34 1.48-42.2 1.96-7.81 0.223-6.35-3.43 2.88-5.54 14-7.13 23.2-7.76 44.9-0.751 25.9 1.41 41.8 8.61 63.3 11 32.8 32.3 63.7 51.5 74.7 5.71 3.27 6.75 4.69 4.16 5.68-2.78 1.07-12.1-5.18-21.1-14.1-23.5-23.4-42.4-63.2-46-97-1.48-13.8-2.47-6.88-2.47 17.3 0 23.2 0.212 26.2 3.04 42.8 3.47 20.4 4.69 25.1 10 38.5 7.44 18.8 17.7 34.3 29 43.9 5.07 4.3 6.05 6.33 3.54 7.29-0.874 0.335-4.83-2.79-10.3-8.14-14.5-14.2-25.9-35.8-32.7-62.4-3.48-13.5-6.51-35.1-6.67-47.5-0.135-10.6-1.7-3.58-3.03 13.7-1.67 21.7 0.264 66.1 3.58 82.3 2.27 11 7.53 20.4 16.4 29.3 7.21 7.26 19.5 16.3 30.1 22.2 5.49 3.03 6.25 4.06 4.05 5.45-1.09 0.69-3.55-0.219-9-3.33-19.4-11.1-33.5-24.2-40-37.2l-3.99-7.97v5.13c0 13.6 8.55 39.1 16.8 50.1 6.69 8.93 24.5 23.4 36.2 29.5 4.08 2.11 4.12 2.06 2.37-2.4-1.61-4.1-1.16-7.51 0.898-6.83 0.653 0.218 1.61 1.72 2.14 3.33 3.54 10.9 15.1 18.3 26.5 17 10.1-1.17 10.6-1.15 10.6 0.383 0 2.24-8.1 4.24-15 3.71-10.3-0.79-31.7-11.4-48.2-23.8-3.62-2.74-6.76-4.8-6.98-4.58-0.222 0.222 1.02 3.28 2.77 6.79 8.72 17.6 25.5 33.3 42.9 40.3 4.13 1.66 20 3.55 20 2.38 0-0.275-2.63-2.13-5.85-4.11-7.19-4.44-8.66-6.01-6.91-7.43 0.913-0.739 3.73 0.456 10.2 4.32 15.4 9.26 27.3 9.83 35.8 1.73 2.29-2.2 2.96-2.4 4.28-1.3 1.41 1.17 1.33 1.56-0.714 3.75-4.7 5.03-9.53 6.71-19.8 6.86-5.22 0.0754-13.4 0.237-18.2 0.36-10.8 0.278-18.1-1.32-27.5-6.04l-7.35-3.69v2.92c0 4.33 3.18 9.77 8.67 14.8 9.02 8.33 17.3 12.2 26.1 12.3 8.57 0.0727 9.38-1.15 3.78-5.73-2.5-2.05-4.54-4.38-4.54-5.19 0-2.83 2.68-2.44 6.23 0.908 4.64 4.38 11 7.31 19 8.78 5.46 1.01 7.25 0.929 12.4-0.536 3.28-0.942 7.93-2.8 10.3-4.13 5.28-2.92 6.12-2.99 6.12-0.515 0 2.54-7.16 6.66-15.1 8.7-6.55 1.68-16.9 1.27-21.6-0.857-1.8-0.82-3.23-0.651-6.33 0.746-4.36 1.97-11.1 2.44-17.8 1.25-2.93-0.526-4.25-0.413-4.25 0.363 0 2.13 14.5 15.6 19.5 18.1 8.28 4.16 16.3 6.12 25.5 6.2 12.3 0.105 20.4-2.52 31.8-10.2 4.22-2.87 5.51-3.33 6.5-2.31 0.979 1.01 0.517 1.87-2.27 4.22-4.98 4.21-14.9 9.58-20.4 11.1l-4.71 1.26 0.801 4.03c2.38 12-0.767 24.9-8.33 34.1-5.39 6.57-16.3 14.8-25.2 19-4.21 1.99-8.46 4.03-9.43 4.53-4.37 2.26-19.3 4.99-30.3 5.55-33.1 1.68-59.2-8.92-83.8-33.9l-10.9-11.1 0.717 4.41c0.962 5.92 7.14 24.2 10.3 30.4 3.53 7 10.3 15.5 16.5 20.9 11.2 9.55 24.5 13.4 42.2 12.3 8.4-0.548 14.1-1.48 30.5-5.02 0.825-0.178 2.29-0.658 3.25-1.07 2.25-0.96 5.04 0.102 4.51 1.72-0.568 1.73-13.8 5.38-26.2 7.21-25.9 3.85-44 0.0152-57.6-12.2-2.63-2.36-5.03-4.3-5.34-4.3-1.15 0-1.85 7.22-1.2 12.4 1.5 12 10 18.6 26.6 20.7 14.6 1.8 36-0.349 49.9-5.01 7.9-2.64 13.6-3.45 14.5-2.04 1.38 2.23-2.11 3.94-13 6.38-27.2 6.06-46.6 7.03-61 3.05-9.28-2.56-8.96-2.7-9.3 3.76-0.164 3.14 0.197 7.55 0.804 9.81 1.58 5.88 7.02 11.5 12.4 12.9 9.61 2.42 27.2 0.599 38.9-4.04 5.33-2.1 20.6-11 23-13.3 0.752-0.752 4.69-3.4 8.76-5.89 6.41-3.92 7.59-4.33 8.83-3.1 0.792 0.783 1.24 1.58 1 1.78-4.2 3.41-31.4 20.5-36.1 22.6-10.5 4.9-25.7 8.32-34.9 7.89-5.16-0.234-7.94 0.0113-7.94 0.701 0 3.4 13.3 20.5 18.4 23.6 4.73 2.89 7.64 2.31 16.2-3.23zm165-212c-0.238-0.412-0.0126-3.9 0.501-7.75 1.15-8.59 0.321-22-1.78-28.9-4.57-15-9.12-23-20.3-35.6-12.4-14-15.3-17.9-14.7-19.5 0.325-0.847 0.99-1.54 1.48-1.54 1.14 0 11.8 11.9 20.4 22.9 7.89 10 12.4 18.3 16.4 30.1 2.64 7.84 2.86 9.64 2.84 23.1-0.0184 10.7-0.384 15.1-1.36 16.2-1.44 1.73-2.71 2.06-3.4 0.858zm145-83.8c-3.55-1.99-4.78-4.42-4.78-9.47 0-5.87 3.33-9.02 9.53-9.02 9.31 0 13.8 9.29 7.72 16-3.32 3.68-8.49 4.71-12.5 2.47zm-120 227c0.571-2.97 0.407-3.25-1.87-3.25-2.65 0-2.62-0.268-0.848 7.75 0.549 2.48 0.679 2.56 1.35 0.75 0.408-1.1 1.02-3.46 1.37-5.25zm0.676-12.6c0-7.83-1.74-9.06-13.4-9.5-11.6-0.429-17.3 0.96-18.2 4.42-0.844 3.36-0.228 3.74 3.21 1.94 6.37-3.32 15.1-1.03 19.3 5.06 1.88 2.75 3 3.42 5.71 3.42h3.37zm57 2.54c0-4.05-2.14-6.6-4.84-5.74l-2.19 0.694 2.76 3.91c3.29 4.65 4.26 4.91 4.26 1.14zm-9.55-8.73c4.36-1.82 4.21-3.36-0.507-5.06-5.02-1.81-9.4-1.65-12 0.449-3.33 2.7-1.98 4.95 3.25 5.42 2.37 0.212 4.59 0.464 4.93 0.56 0.345 0.0961 2.29-0.519 4.32-1.37zm-49.2-180c14.2-3.63 28.2-13.3 51.5-35.4 8.95-8.5 19.9-17.9 24.2-20.8l7.97-5.33-7.36-7.52c-19.7-20.2-31.9-38.7-41.1-62.4-5.43-14-8.09-23.8-10.1-37-5.45-36.1-0.998-69.5 13.7-103 2.17-4.95 4.21-9.63 4.54-10.4 2-4.65-28.4 18-42.4 31.6-15.3 14.8-26.1 28.4-36.3 45.2-12.3 20.4-21.4 44.8-25.3 67.2-1.63 9.62-1.62 39.5 0.0284 47.9 1.13 5.71 2.1 7.41 9.11 16 10.1 12.3 18.1 25.2 21.5 34.4 1.46 3.97 5.99 14 10.1 22.4 4.08 8.34 7.42 15.6 7.42 16 0 1.25 2.19 3.28 3.54 3.28 0.627 0 4.54-0.87 8.7-1.93zm187-5.66c4.07-2.11 11.2-4.12 17.3-4.92 6.48-0.846 8.68-1.48 8.31-2.4-0.621-1.51-24.8-21.1-26-21.1-0.339 0-0.392 2.36-0.12 5.25 0.454 4.81-1.46 18.8-3.15 23-0.868 2.16-0.236 2.19 3.69 0.158z");
            crc2.lineWidth = 5;
            crc2.fillStyle = "hsl(" + Math.random() * 360 + ", 100%, 50%)";
            crc2.scale(0.2, 0.2);
            crc2.fill(path);
            crc2.stroke(path);
            crc2.closePath();
            crc2.restore();
            crc2.save();
            crc2.translate(Math.random() * 100, Math.random() * 100);
            let path1 = new Path2D("m134.7 99.3c-5.98-0.495-11.9-2.05-17.1-4.5-1.74-0.818-5.64-3-5.52-3.09 0.0281-0.0202 0.89 0.0303 1.92 0.112 2.27 0.181 6.13-0.076 8.61-0.573 4.67-0.936 8.66-2.59 12.7-5.27l2.04-1.35-1.69-0.225c-1.88-0.25-3.61-0.729-5.13-1.42-4-1.82-7.6-5.67-9.01-9.66l-0.239-0.677 0.927 0.136c1.37 0.201 3.57 0.154 5.24-0.113 0.81-0.129 1.44-0.27 1.39-0.313-0.0431-0.043-0.546-0.197-1.12-0.342-1.63-0.413-4.45-1.88-6.02-3.13-2.44-1.94-4.56-4.94-5.56-7.87-0.44-1.29-0.912-3.84-0.912-4.93v-0.762l1.34 0.618c1.58 0.73 3.42 1.23 5.14 1.39l1.24 0.117-0.533-0.391c-1.27-0.929-3.77-3.69-4.6-5.08-1-1.68-1.96-4.33-2.26-6.24-0.313-2.01-0.113-5.24 0.442-7.12 0.472-1.6 1.49-4.04 1.68-4.03 0.0602 0.0037 0.389 0.368 0.731 0.809 1.12 1.44 5.56 5.62 7.64 7.19 7.14 5.38 15.2 8.59 24 9.61 3.34 0.386 3.21 0.4 3-0.298-0.0945-0.317-0.22-1.38-0.279-2.36-0.395-6.57 3.24-13.1 9.01-16.1 6.41-3.36 14.4-2.42 19.5 2.31l1.18 1.08 1.42-0.332c2.77-0.647 5.78-1.8 8.31-3.18 0.66-0.361 1.2-0.634 1.2-0.606 0 0.0279-0.236 0.622-0.525 1.32-1.14 2.76-3.76 6-6.04 7.47-0.492 0.318-0.874 0.597-0.85 0.62 0.0926 0.088 2.93-0.467 4.64-0.908 0.983-0.253 2.47-0.724 3.3-1.05s1.55-0.556 1.59-0.521c0.35 0.317-5.73 6.82-7.49 8.02l-0.844 0.573-5.33e-4 2.07c-0.0031 10.7-3.71 21.6-10.4 30.5-1.66 2.2-6.11 6.79-8.12 8.36-8.45 6.61-18.2 9.97-29.3 10.1-2.05 0.0319-4.13 0.0249-4.62-0.0155zm10.8-3.26c9.7-1.43 18.2-5.67 25-12.4 8.9-8.87 14-21.6 13.8-34.1l-0.0443-2.65 1.32-0.944c1.85-1.32 1.84-1.29 0.327-1.17-1.32 0.111-3.07-0.133-4.9-0.684l-0.746-0.224 2.48-2.28c1.37-1.26 2.45-2.32 2.41-2.36-0.0423-0.0422-0.878 0.0942-1.86 0.303l-1.78 0.38-1.21-1.23c-7.19-7.29-19.1-5.32-23.4 3.88-1.03 2.18-1.25 3.28-1.23 6.1 0.0194 2.11 0.102 2.8 0.552 4.61 0.291 1.17 0.515 2.14 0.499 2.17-0.0994 0.129-6.63-0.377-8.7-0.674-10.3-1.48-20.1-6.21-27.9-13.5-0.962-0.895-1.5-1.28-1.58-1.14-0.0714 0.115-0.168 1.19-0.214 2.39-0.102 2.64 0.314 4.75 1.37 6.92 0.767 1.58 2.42 3.74 3.58 4.68 1.04 0.844 5.3 3.68 7.59 5.05l1.83 1.1-1.21 0.084c-3.13 0.217-10.6-0.0974-12.3-0.518-0.543-0.136-0.535 0.0667 0.0565 1.42 1.56 3.56 4.86 6.63 8.41 7.83 0.696 0.235 3.87 0.884 7.05 1.44l5.78 1.01-5.78 1.92c-3.88 1.29-6.3 1.99-7.35 2.14l-1.56 0.225 1.51 1.51c1.65 1.66 3.01 2.6 4.82 3.35 2.14 0.882 3.35 1.05 8.37 1.17 2.56 0.0609 4.68 0.121 4.7 0.134 0.0183 0.0129-0.932 0.779-2.11 1.7-6.11 4.78-7.78 5.9-11.2 7.52-2.22 1.05-5.62 2.23-7.46 2.58-0.802 0.154-1.12 0.28-0.947 0.377 1.07 0.596 7.37 1.93 10.7 2.26 2.51 0.252 8.51 0.0641 11.3-0.355z");
            crc2.fillStyle = "hsl(" + Math.random() * 360 + ", 100%, 50%)";
            crc2.scale(0.8, 0.8);
            crc2.fill(path1);
            crc2.stroke(path1);
            crc2.closePath();
            crc2.restore();
            crc2.save();
            crc2.translate(Math.random() * 100, Math.random() * 100);
            let path2 = new Path2D("m234.7 99.3c-5.98-0.495-11.9-2.05-17.1-4.5-1.74-0.818-5.64-3-5.52-3.09 0.0281-0.0202 0.89 0.0303 1.92 0.112 2.27 0.181 6.13-0.076 8.61-0.573 4.67-0.936 8.66-2.59 12.7-5.27l2.04-1.35-1.69-0.225c-1.88-0.25-3.61-0.729-5.13-1.42-4-1.82-7.6-5.67-9.01-9.66l-0.239-0.677 0.927 0.136c1.37 0.201 3.57 0.154 5.24-0.113 0.81-0.129 1.44-0.27 1.39-0.313-0.0431-0.043-0.546-0.197-1.12-0.342-1.63-0.413-4.45-1.88-6.02-3.13-2.44-1.94-4.56-4.94-5.56-7.87-0.44-1.29-0.912-3.84-0.912-4.93v-0.762l1.34 0.618c1.58 0.73 3.42 1.23 5.14 1.39l1.24 0.117-0.533-0.391c-1.27-0.929-3.77-3.69-4.6-5.08-1-1.68-1.96-4.33-2.26-6.24-0.313-2.01-0.113-5.24 0.442-7.12 0.472-1.6 1.49-4.04 1.68-4.03 0.0602 0.0037 0.389 0.368 0.731 0.809 1.12 1.44 5.56 5.62 7.64 7.19 7.14 5.38 15.2 8.59 24 9.61 3.34 0.386 3.21 0.4 3-0.298-0.0945-0.317-0.22-1.38-0.279-2.36-0.395-6.57 3.24-13.1 9.01-16.1 6.41-3.36 14.4-2.42 19.5 2.31l1.18 1.08 1.42-0.332c2.77-0.647 5.78-1.8 8.31-3.18 0.66-0.361 1.2-0.634 1.2-0.606 0 0.0279-0.236 0.622-0.525 1.32-1.14 2.76-3.76 6-6.04 7.47-0.492 0.318-0.874 0.597-0.85 0.62 0.0926 0.088 2.93-0.467 4.64-0.908 0.983-0.253 2.47-0.724 3.3-1.05s1.55-0.556 1.59-0.521c0.35 0.317-5.73 6.82-7.49 8.02l-0.844 0.573-5.33e-4 2.07c-0.0031 10.7-3.71 21.6-10.4 30.5-1.66 2.2-6.11 6.79-8.12 8.36-8.45 6.61-18.2 9.97-29.3 10.1-2.05 0.0319-4.13 0.0249-4.62-0.0155zm10.8-3.26c9.7-1.43 18.2-5.67 25-12.4 8.9-8.87 14-21.6 13.8-34.1l-0.0443-2.65 1.32-0.944c1.85-1.32 1.84-1.29 0.327-1.17-1.32 0.111-3.07-0.133-4.9-0.684l-0.746-0.224 2.48-2.28c1.37-1.26 2.45-2.32 2.41-2.36-0.0423-0.0422-0.878 0.0942-1.86 0.303l-1.78 0.38-1.21-1.23c-7.19-7.29-19.1-5.32-23.4 3.88-1.03 2.18-1.25 3.28-1.23 6.1 0.0194 2.11 0.102 2.8 0.552 4.61 0.291 1.17 0.515 2.14 0.499 2.17-0.0994 0.129-6.63-0.377-8.7-0.674-10.3-1.48-20.1-6.21-27.9-13.5-0.962-0.895-1.5-1.28-1.58-1.14-0.0714 0.115-0.168 1.19-0.214 2.39-0.102 2.64 0.314 4.75 1.37 6.92 0.767 1.58 2.42 3.74 3.58 4.68 1.04 0.844 5.3 3.68 7.59 5.05l1.83 1.1-1.21 0.084c-3.13 0.217-10.6-0.0974-12.3-0.518-0.543-0.136-0.535 0.0667 0.0565 1.42 1.56 3.56 4.86 6.63 8.41 7.83 0.696 0.235 3.87 0.884 7.05 1.44l5.78 1.01-5.78 1.92c-3.88 1.29-6.3 1.99-7.35 2.14l-1.56 0.225 1.51 1.51c1.65 1.66 3.01 2.6 4.82 3.35 2.14 0.882 3.35 1.05 8.37 1.17 2.56 0.0609 4.68 0.121 4.7 0.134 0.0183 0.0129-0.932 0.779-2.11 1.7-6.11 4.78-7.78 5.9-11.2 7.52-2.22 1.05-5.62 2.23-7.46 2.58-0.802 0.154-1.12 0.28-0.947 0.377 1.07 0.596 7.37 1.93 10.7 2.26 2.51 0.252 8.51 0.0641 11.3-0.355z");
            crc2.fillStyle = "hsl(" + Math.random() * 360 + ", 100%, 50%)";
            crc2.scale(0.8, 0.8);
            crc2.fill(path2);
            crc2.stroke(path2);
            crc2.closePath();
            crc2.restore();
        }
        function drawFlyingBird(_position) {
            console.log("Flying Bird");
            crc2.save();
            crc2.translate(Math.random() * 100, Math.random() * 100);
            crc2.beginPath();
            crc2.moveTo(0, 0);
            crc2.bezierCurveTo(0, -10, -10, -10, -10, 0);
            crc2.moveTo(0, 0);
            crc2.strokeStyle = "#000";
            crc2.closePath();
            crc2.stroke();
            crc2.beginPath();
            crc2.moveTo(0, 0);
            crc2.bezierCurveTo(0, -10, 10, -10, 10, 0);
            crc2.moveTo(0, 0);
            crc2.strokeStyle = "#000";
            crc2.closePath();
            crc2.stroke();
            //duplicate bird times 20
            for (let i = 0; i < 20; i++) {
                crc2.save();
                crc2.translate(Math.random() * 300, Math.random() * 300);
                crc2.beginPath();
                crc2.moveTo(0, 0);
                crc2.bezierCurveTo(0, -10, -10, -10, -10, 0);
                crc2.moveTo(0, 0);
                crc2.strokeStyle = "#000";
                crc2.closePath();
                crc2.stroke();
                crc2.beginPath();
                crc2.moveTo(0, 0);
                crc2.bezierCurveTo(0, -10, 10, -10, 10, 0);
                crc2.moveTo(0, 0);
                crc2.strokeStyle = "#000";
                crc2.closePath();
                crc2.stroke();
                crc2.restore();
            }
        }
    }
})(A08 || (A08 = {}));
//# sourceMappingURL=canvas.js.map